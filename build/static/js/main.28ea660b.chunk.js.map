{"version":3,"sources":["three-components/Effects.js","three-components/Controls.js","three-components/Art.js","components/Drag.js","components/Dragvert.js","components/Para.js","components/Scroll.js","components/Title.js","components/Text.js","components/Header.js","components/Dashboard.js","components/Instructions.js","static/List.js","App.js","serviceWorker.js","socket/config.js","index.js"],"names":["Effects","useMemo","THREE","composer","useRef","useThree","scene","gl","size","camera","useEffect","current","setSize","width","height","useFrame","render","ref","args","attachArray","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","FilmPass","OrbitControls","Canvas","styled","c","shapes","Array","fill","map","shape","Math","round","random","length","Main","color","positionX","positionY","positionZ","scaleX","input","scaleY","scaleZ","rotationX","rotationZ","rotationY","refs","client","group","position","set","scale","x","y","z","rotation","mesh","attach","meshStandardMaterial","Lights","intensity","lookAt","Box","socket","useContext","SocketContext","useState","setClient","on","clients","concurrent","fov","antialias","alpha","onCreated","setClearColor","toneMapping","outputEncoding","physicallyCorrectLights","user","i","key","window","innerHeight","Blob","a","div","Drag","number","text","specificFromParent","movement","count","useSpring","config","mass","tension","friction","precision","opacity","bind","useDrag","down","cancel","immediate","emit","initial","get","lockDirection","style","backgroundColor","p","H1","h1","Header","active","setActive","onClick","e","margin","padding","icon","faArrowsAlt","Content","ContentArt","Dashboard","colors","floor","toString","index","control","name","list","zIndex","h2","Link","Mainapp","App","exact","path","Boolean","location","hostname","match","io","process","React","createContext","ReactDOM","Provider","value","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.28ea660b.chunk.js","sourcesContent":["import React, { useRef, useEffect, useMemo } from \"react\";\nimport { extend, useThree, useFrame } from \"react-three-fiber\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport { FilmPass } from \"three/examples/jsm/postprocessing/FilmPass\";\nimport { FXAAShader } from \"three/examples/jsm/shaders/FXAAShader\";\nimport * as THREE from \"three\";\n\nextend({\n  EffectComposer,\n  ShaderPass,\n  RenderPass,\n  UnrealBloomPass,\n  FilmPass,\n});\n\nexport default function Effects() {\n  const aspect = useMemo(() => new THREE.Vector3(), []);\n  const composer = useRef();\n  const { scene, gl, size, camera } = useThree();\n  useEffect(() => void composer.current.setSize(size.width, size.height), [\n    size,\n  ]);\n  useFrame(() => composer.current.render(), 2);\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      {/* <unrealBloomPass\n        attachArray=\"passes\"\n        scene={scene}\n        camera={camera}\n        args={[aspect, 0.1, 0.4, 0.25]}\n      /> */}\n      {/* <filmPass attachArray=\"passes\" args={[0.05, 0, 0, false]} /> */}\n      {/* <shaderPass attachArray=\"passes\" args={[FXAAShader]} renderToScreen /> */}\n    </effectComposer>\n  );\n}\n","import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { extend, useThree, useFrame } from \"react-three-fiber\";\nimport React, { useRef } from \"react\";\n\nextend({ OrbitControls });\n\nexport default function Controls(props) {\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n  const controls = useRef();\n  useFrame((state) => controls.current.update());\n  return (\n    <orbitControls ref={controls} args={[camera, domElement]} {...props} />\n  );\n}\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  Suspense,\n  useMemo,\n  useContext,\n} from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame, Dom, useThree, extend } from \"react-three-fiber\";\nimport { Canvas as c } from \"react-three-fiber\";\nimport styled from \"styled-components\";\nimport { useSprings, a, useSpring } from \"react-spring/three\";\nimport Effects from \"./Effects\";\nimport Controls from \"./Controls\";\nimport { SocketContext } from \"../index\";\nimport niceColors from \"nice-color-palettes\";\nimport { HTML } from \"drei\";\n\nconst Canvas = styled(c)`\n  box-sizing: border-box;\n  height: 100;\n  width: 100;\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n`;\n\nconst clock = new THREE.Clock();\n\nconst number = 35;\n// const colors = [\n//   \"#A2CCB6\",\n//   \"#FCEEB5\",\n//   \"#EE786E\",\n//   \"#e0feff\",\n//   \"lightpink\",\n//   \"lightblue\",\n// ];\nconst shapes = [\n  \"planeBufferGeometry\",\n  \"planeBufferGeometry\",\n  \"planeBufferGeometry\",\n];\n\nconst data = new Array(number).fill().map(() => {\n  const shape = shapes[Math.round(Math.random() * (shapes.length - 1))];\n  return {\n    shape,\n    // color: colors[Math.round(Math.random() * (colors.length - 1))],\n    args: [0.1 + Math.random() * 9, 0.1 + Math.random() * 9, 10],\n  };\n});\n\nfunction Main({\n  color,\n  positionX,\n  positionY,\n  positionZ,\n  input,\n  scaleX,\n  scaleY,\n  scaleZ,\n  rotationX,\n  rotationY,\n  rotationZ,\n  client,\n}) {\n  const refs = useRef();\n  const mesh = useRef();\n  const group = useRef();\n  const tempColor = new THREE.Color();\n\n  useFrame(() => {\n    refs.current.position.set(positionX, positionY, positionZ);\n    refs.current.scale.x = scaleX + 10;\n    refs.current.scale.y = scaleY + 10;\n    refs.current.scale.z = scaleZ + 10;\n    // refs.current.rotation.set(rotationX, rotationY, rotationZ);\n    refs.current.rotation.x = rotationX + 10;\n    refs.current.rotation.y = rotationX + 10;\n    refs.current.rotation.z = rotationZ;\n    // });\n  });\n\n  return (\n    <group ref={group}>\n      <group position={[0, 0, 0]}>\n        <a.mesh ref={refs}>\n          <boxBufferGeometry attach=\"geometry\" args={[2, 2, 2]} />\n          <a.meshStandardMaterial attach=\"material\" color={color} />\n        </a.mesh>\n      </group>\n    </group>\n  );\n}\n\nfunction Dolly() {\n  useFrame(({ clock, camera }) => {\n    camera.position.set([120, 120, 120]);\n    camera.updateProjectionMatrix(\n      void (camera.position.z = 50 + Math.sin(clock.getElapsedTime()) * 30)\n    );\n  });\n  return null;\n}\n\nfunction Lights() {\n  return (\n    <group>\n      <pointLight intensity={0.9} />\n      <ambientLight intensity={0.1} />\n      <rectAreaLight\n        intensity={0.5}\n        lookAt={[0, 0, 20]}\n        position={[0, 0, 200]}\n        width={1000}\n        height={500}\n      ></rectAreaLight>\n    </group>\n  );\n}\n\nexport default function Box() {\n  const socket = useContext(SocketContext);\n  const [client, setClient] = useState([]);\n  //Initial loading, updating and leaving sockets\n  useEffect(() => {\n    socket.on(\"updateOnLoad\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"updateArt\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"clientsLeave\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n  //Incoming rotation sockets\n  useEffect(() => {\n    socket.on(\"userRotationX\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"userRotationY\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"userRotationZ\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n  //Incoming movement sockets\n  useEffect(() => {\n    socket.on(\"updateMovementX\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"updateMovementY\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"updateMovementZ\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n  //Incoming scale sockets\n  useEffect(() => {\n    socket.on(\"updateScaleX\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"updateScaleY\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"updateScaleZ\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket.on(\"updateColor\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket.on(\"actionId\", (clients) => {\n      setClient(clients);\n    });\n  }, [socket]);\n\n  return (\n    <Canvas\n      concurrent\n      camera={{ fov: 35, position: [120, 120, 120] }}\n      gl={{ antialias: true, alpha: false }}\n      onCreated={({ gl, scene }) => {\n        // scene.rotation.set(0, 0, 0);\n        scene.position.set(-40, -40, -40);\n        gl.setClearColor(\"white\");\n        gl.toneMapping = THREE.ACESFilmicToneMapping;\n        gl.outputEncoding = THREE.sRGBEncoding;\n        gl.physicallyCorrectLights = true;\n      }}\n    >\n      <Lights />\n      {/* <Controls /> */}\n      <group>\n        {/* <HTML>\n          <h1>{client.length}</h1>\n        </HTML> */}\n        <group>\n          {client.map((user, i) => (\n            <Main\n              key={i}\n              color={user.color}\n              positionX={user.x}\n              positionY={user.y}\n              positionZ={user.z}\n              scaleX={user.scaleX}\n              scaleY={user.scaleY}\n              scaleZ={user.scaleZ}\n              rotationX={user.rotationX}\n              rotationY={user.rotationY}\n              rotationZ={user.rotationZ}\n              input={user.input}\n              client={client}\n            />\n          ))}\n        </group>\n      </group>\n      <Effects />\n    </Canvas>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSpring, a } from \"react-spring\";\nimport { useDrag } from \"react-use-gesture\";\nimport styled from \"styled-components\";\n\nconst height = window.innerHeight;\n\nconst colors = [\n  \"#A2CCB6\",\n  \"#FCEEB5\",\n  \"#EE786E\",\n  \"#e0feff\",\n  \"lightpink\",\n  \"lightblue\",\n];\n\nconst Blob = styled(a.div)`\n  z-index: 2;\n\n  text-align: center;\n  overflow: hidden;\n  outline-color: black;\n  outline: none;\n`;\n\nconst Text = styled.div`\n  color: black;\n  height: fit-content;\n  font-size: 18px;\n  margin: 0;\n  line-height: 0.025em;\n  font-weight: bold;\n`;\n\nconst Drag = ({\n  socket,\n  text,\n  number,\n  width,\n  height,\n  movement,\n  specificFromParent,\n}) => {\n  const [count, setCount] = useState(0);\n  const [active, setActive] = useState(0);\n  const [{ x, y, opacity }, set] = useSpring(() => ({\n    config: {\n      mass: 5,\n      tension: 400,\n      friction: 50,\n      precision: 0.0001,\n    },\n    x: 0,\n    y: 0,\n  }));\n  const bind = useDrag(\n    ({ down, movement: [x, y], cancel }) =>\n      set(\n        { x: down ? x : 0, y: down ? y : 0, immediate: down },\n        socket.emit(specificFromParent, (x + y) / 100)\n      ),\n    {\n      initial: () => [x.get(), 0],\n      lockDirection: true,\n    }\n  );\n\n  useEffect(() => {}, [count]);\n\n  return (\n    <Blob\n      {...bind()}\n      style={{\n        backgroundColor: number,\n        x,\n        y,\n        width: width,\n        height: height,\n        opacity,\n      }}\n    ></Blob>\n  );\n};\n\nexport default Drag;\n","import React from \"react\";\nimport { useSpring, a } from \"react-spring\";\nimport { useDrag } from \"react-use-gesture\";\nimport styled from \"styled-components\";\n\n// const width =\n\nconst Blob = styled(a.div)`\n  width: 25vw;\n  height: 25vh;\n  background: blueviolet;\n  border-radius: 16px;\n  z-index: 2;\n  user-select: none;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Dragvert = ({ socket, width, height }) => {\n  const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }));\n  const bind = useDrag(\n    ({ down, movement: [mx, my] }) =>\n      set(\n        { x: down ? mx : 0, y: down ? my : 0, immediate: down },\n        socket.emit(\"outgoing\", my / 1000),\n        console.log(\"test\" + my)\n      ),\n    { bounds: { left: 0, right: 257, top: 0, bottom: 144 } }\n  );\n\n  return (\n    <Blob\n      {...bind()}\n      style={{\n        x,\n        y,\n      }}\n    ></Blob>\n  );\n};\n\nexport default Dragvert;\n","import React, { useState, useEffect } from \"react\";\nimport { useSpring, a } from \"react-spring\";\nimport { useDrag } from \"react-use-gesture\";\nimport styled from \"styled-components\";\n\nconst P1 = styled(a.p)`\n  justify-content: center;\n  text-decoration: none;\n  user-select: none;\n  border-style: none !important;\n  z-index: 2;\n  display: flex;\n  padding: 1em;\n  text-align: center;\n  font-size: 20px;\n  width: 28em;\n  color: white;\n  font-weight: normal;\n  margin: 2em;\n`;\n\nconst Para = ({ socket, toggle }) => {\n  const [count, setCount] = useState(0);\n  const [active, setActive] = useState(0);\n  const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }));\n  const bind = useDrag(\n    ({ down, movement: [x, y] }) =>\n      set({ x: down ? x : 0, y: down ? y : 0 }, setActive(x)),\n\n    {\n      lockDirection: true,\n    }\n  );\n  const Spawn = () => {\n    setCount(Number(!count));\n  };\n  useEffect(() => {\n    socket.emit(\"updateUserScaleY\", count);\n    console.log(count);\n  }, [count]);\n  return (\n    <P1 {...bind()} style={{ x }} onClick={Spawn}>\n      This interactive art piece is focused around user interaction predefined\n      controls, each open control page tab creates a shape in 3D space.\n      <br />\n      The coloured shapes visible above can be moved to manipulate 3D objects.\n      <br />\n      Locate the button that will open the 3D environment!\n    </P1>\n  );\n};\n\nexport default Para;\n","import React, { useEffect } from \"react\";\nimport { useSpring, a } from \"react-spring\";\nimport { useScroll } from \"react-use-gesture\";\nimport styled from \"styled-components\";\n\nconst Slider = styled(a.div)`\n  justify-content: center;\n  text-decoration: none;\n  user-select: none;\n  border-style: none !important;\n  font-size: 20px;\n  font-weight: bold;\n  background: black;\n`;\n\nfunction Scroll() {\n  const [{ width }, set] = useSpring(() => ({ width: \"0%\" }));\n  const height = document.documentElement.scrollHeight;\n\n  const bind = useScroll(\n    ({ xy: [, y] }) => set({ width: (y / height) * 100 + \"%\" }),\n    { domTarget: window }\n  );\n\n  useEffect(bind, [bind]);\n\n  return <Slider style={{ width }} />;\n}\n\nexport default Scroll;\n","import React, { useState, useEffect } from \"react\";\nimport { a } from \"react-spring\";\nimport styled from \"styled-components\";\nimport Reward from \"react-rewards\";\n\nconst Text = styled(a.div)`\n  width: 80px;\n  align-content: center;\n  user-select: none;\n  color: white;\n  transition-duration: 0.1s;\n  :active {\n    opacity: 0.5;\n    color: red;\n  }\n  margin: 10em;\n  position: absolute;\n`;\n\nconst H1 = styled(a.a)`\n  justify-content: center;\n  text-decoration: none;\n  border-style: none !important;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nconst Title = ({ socket, TITLES, reward }) => {\n  const [count, setCount] = useState(0);\n  //Maybe remove the reward me shit as it's cheesy, but need.\n  const Spawn = () => {\n    setCount(Number(!count));\n  };\n  useEffect(() => {\n    socket.emit(\"spawn\", count);\n  }, [count]);\n  return (\n    <Text>\n      <H1 onClick={Spawn}>COLLECTIVE ART</H1>\n    </Text>\n  );\n};\n\nexport default Title;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input`\n  z-index: 2;\n  justify-content: center;\n  text-align: center;\n  overflow: hidden;\n  :focus {\n    outline: none;\n  }\n  outline-color: white;\n  outline: 0.325em solid;\n  cursor: default;\n`;\n\nconst Text = ({ socket, width, height }) => {\n  const [value, setValue] = useState(\"\");\n  const [number, setNumber] = useState(0);\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    setNumber(value.length);\n  };\n\n  const handleSubmit = (event) => {\n    socket.emit(\"updateUserRotation\", value.length);\n    event.preventDefault();\n    setValue(\"\");\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Input\n          style={{ width: width, height: height }}\n          type=\"text\"\n          value={value}\n          onChange={(e) => handleChange(e)}\n        ></Input>\n      </form>\n    </div>\n  );\n};\n\nexport default Text;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowsAltV, faArrowsAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Main = styled.div`\n  width: 100vw;\n  height: fit-content;\n  color: white;\n  display: flex;\n  flex-direction: row;\n  margin: 50;\n`;\n\nconst H1 = styled.h1`\n  padding-left: 1em;\n  cursor: pointer;\n  transition-duration: 0.1s;\n  justify-content: flex-start;\n  :active {\n    color: #ee786e;\n  }\n`;\n\nconst Box = styled.div`\n  transition-duration: 0.1s;\n  font-size: 0.825em;\n  width: 2em;\n  height: 2em;\n  background-color: lightpink;\n  align-self: flex-start;\n  margin: 1.625em;\n  :active {\n    color: #ee786e;\n  }\n`;\n\nconst BoxOther = styled.div`\n  transition-duration: 0.1s;\n  width: 2em;\n  height: 2em;\n  background-color: lightpink;\n  margin: 1.625em;\n  align-self: flex-end;\n  :active {\n    color: #ee786e;\n  }\n`;\n\nconst Header = ({ socket }) => {\n  const [count, setCount] = useState(0);\n  const [active, setActive] = useState(false);\n  const [number, setNumber] = useState(0);\n  const Spawn = () => {\n    setCount(Number(!count));\n    setNumber(number + 1);\n  };\n  useEffect(() => {\n    socket.emit(\"spawn\", count);\n  }, [count]);\n  return (\n    <Main>\n      {active ? (\n        <div style={{ width: \"100vw\" }}>\n          <H1 onClick={(e) => setActive(false)}>\n            Collective Art:{\" \"}\n            <div style={{ color: \"lightpink\" }}>\n              try dragging the coloured blocks\n            </div>\n          </H1>\n        </div>\n      ) : (\n        <Box onClick={(e) => setActive(true)}>\n          <FontAwesomeIcon\n            style={{ margin: \"auto\", padding: \"0.5em\" }}\n            icon={faArrowsAlt}\n          />\n          click me!\n        </Box>\n      )}\n    </Main>\n  );\n};\n\nexport default Header;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Drag from \"./Drag\";\nimport Dragvert from \"./Dragvert\";\nimport Para from \"./Para\";\nimport Scroll from \"./Scroll\";\nimport Title from \"./Title\";\nimport Text from \"./Text\";\nimport Header from \"./Header\";\nimport Box from \"../three-components/Art\";\nimport { SocketContext } from \"../index\";\n\nconst Main = styled.div`\n  height: 100vh;\n  width: 100vw;\n  user-select: none;\n  background-color: #3d4447;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  flex-basis: 80%;\n`;\n\nconst Content = styled.div`\n  height: fit-content;\n  width: 100vw;\n  user-select: none;\n  background-color: #3d4447;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  flex-basis: 80%;\n`;\n\nconst ContentArt = styled.div`\n  height: 20em;\n  width: 100vw;\n  user-select: none;\n  background-color: #3d4447;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  flex-basis: 80%;\n`;\n\nconst Dashboard = () => {\n  const socket = useContext(SocketContext);\n  useEffect(() => {\n    socket.emit(\"subscribe\", \"control\");\n  }, [socket]);\n\n  const [visible, setVisible] = useState(false);\n  const textBoxSize = Math.floor(Math.random() * 10 + 2).toString() + \"em\";\n\n  const colors = [\n    \"#A2CCB6\",\n    \"#FCEEB5\",\n    \"#EE786E\",\n    \"#e0feff\",\n    \"lightpink\",\n    \"lightblue\",\n  ];\n\n  let index = 0;\n  const color = [\n    {\n      key: index++,\n      number: colors[Math.floor(Math.random() * (colors.length - 1))],\n      width: Math.floor(Math.random() * 10).toString() + \"em\",\n      height: Math.floor(Math.random() * 10).toString() + \"em\",\n      movement: Math.floor(Math.random() * 50),\n      control: \"updateUserMovementX\",\n      name: \"updateUserRotationX\",\n    },\n    {\n      key: index++,\n      number: colors[Math.floor(Math.random() * (colors.length - 1))],\n      width: Math.floor(Math.random() * 10).toString() + \"em\",\n      height: Math.floor(Math.random() * 10).toString() + \"em\",\n      movement: Math.floor(Math.random() * 50),\n      control: \"updateUserMovementY\",\n      name: \"updateUserScaleY\",\n    },\n    {\n      key: index++,\n      number: colors[Math.floor(Math.random() * (colors.length - 1))],\n      width: Math.floor(Math.random() * 10).toString() + \"em\",\n      height: Math.floor(Math.random() * 10).toString() + \"em\",\n      movement: Math.floor(Math.random() * 50),\n      control: \"updateUserMovementZ\",\n      name: \"updateUserScaleZ\",\n    },\n    {\n      key: index++,\n      number: colors[Math.floor(Math.random() * (colors.length - 1))],\n      width: Math.floor(Math.random() * 10).toString() + \"em\",\n      height: Math.floor(Math.random() * 10).toString() + \"em\",\n      movement: Math.floor(Math.random() * 50),\n      control: \"updateUserRotationX\",\n      name: \"updateUserMovementX\",\n    },\n    {\n      key: index++,\n      number: colors[Math.floor(Math.random() * (colors.length - 1))],\n      width: Math.floor(Math.random() * 10).toString() + \"em\",\n      height: Math.floor(Math.random() * 10).toString() + \"em\",\n      movement: Math.floor(Math.random() * 50),\n      control: \"updateUserRotationY\",\n      name: \"updateUserScaleX\",\n    },\n    {\n      key: index++,\n      number: colors[Math.floor(Math.random() * (colors.length - 1))],\n      width: Math.floor(Math.random() * 10).toString() + \"em\",\n      height: Math.floor(Math.random() * 10).toString() + \"em\",\n      movement: Math.floor(Math.random() * 50),\n      control: \"updateUserRotationZ\",\n      name: \"updateUserMovementY\",\n    },\n    {\n      key: index++,\n      number: colors[Math.floor(Math.random() * (colors.length - 1))],\n      width: Math.floor(Math.random() * 10).toString() + \"em\",\n      height: Math.floor(Math.random() * 10).toString() + \"em\",\n      movement: Math.floor(Math.random() * 50),\n      control: \"updateUserScaleX\",\n      name: \"updateUserRotationY\",\n    },\n    {\n      key: index++,\n      number: colors[Math.floor(Math.random() * (colors.length - 1))],\n      width: Math.floor(Math.random() * 10).toString() + \"em\",\n      height: Math.floor(Math.random() * 10).toString() + \"em\",\n      movement: Math.floor(Math.random() * 50),\n      control: \"updateUserScaleY\",\n      name: \"updateUserRotationZ\",\n    },\n    {\n      key: index++,\n      number: colors[Math.floor(Math.random() * (colors.length - 1))],\n      width: Math.floor(Math.random() * 10).toString() + \"em\",\n      height: Math.floor(Math.random() * 10).toString() + \"em\",\n      movement: Math.floor(Math.random() * 50),\n      control: \"updateUserScaleZ\",\n      name: \"updateUserMovementX\",\n    },\n    // {\n    //   key: index++,\n    //   number: colors[Math.floor(Math.random() * (colors.length - 1))],\n    //   width: Math.floor(Math.random() * 10).toString() + \"em\",\n    //   height: Math.floor(Math.random() * 10).toString() + \"em\",\n    //   movement: Math.floor(Math.random() * 50),\n    //   control: \"updateUserRotationX\",\n    // },\n    // {\n    //   key: index++,\n    //   number: colors[Math.floor(Math.random() * (colors.length - 1))],\n    //   width: Math.floor(Math.random() * 10).toString() + \"em\",\n    //   height: Math.floor(Math.random() * 10).toString() + \"em\",\n    //   movement: Math.floor(Math.random() * 50),\n    //   control: \"updateUserRotationX\",\n    // },\n    // {\n    //   key: index++,\n    //   number: colors[Math.floor(Math.random() * (colors.length - 1))],\n    //   width: Math.floor(Math.random() * 10).toString() + \"em\",\n    //   height: Math.floor(Math.random() * 10).toString() + \"em\",\n    //   movement: Math.floor(Math.random() * 50),\n    //   control: \"updateUserRotationX\",\n    // },\n  ];\n\n  return (\n    <Main>\n      <Header socket={socket} />\n      <Content>\n        {color.map((list, i) => (\n          <Drag\n            style={{ zIndex: 5 }}\n            socket={socket}\n            number={list.number}\n            key={list.key}\n            width={list.width}\n            height={list.height}\n            movement={list.movement}\n            specificFromParent={list.control}\n            text={list.name}\n          ></Drag>\n        ))}\n      </Content>\n      <ContentArt>\n        {/* <Para socket={socket}></Para> */}\n        <Box />\n      </ContentArt>\n    </Main>\n  );\n};\n\nexport default Dashboard;\n","//Main route, shows initially with a brief introduction into what the project is about.\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Main = styled.div`\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  width: 100vw;\n  height: 100vh;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst Title = styled.div`\n  margin-left: 40px;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst Para = styled.div`\n  margin-left: 40px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  justify-content: center;\n  align-content: center;\n  width: 250px;\n`;\n\nconst Primary = styled.h1`\n  font-weight: bolder;\n  margin: 0;\n`;\n\nconst Secondary = styled.h2`\n  font-weight: normal;\n  margin: 0;\n`;\n\nconst Buttoncontainer = styled.div`\n  margin-left: 40px;\n  justify-content: left;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Button = styled(Link)`\n  font-weight: bold;\n  text-transform: lowercase;\n  display: inline-block;\n  text-decoration-line: none;\n  border-radius: 5px;\n  padding: 0.5rem 0;\n  margin-right: 1.5rem;\n  width: 11rem;\n  background: transparent;\n  color: #ea9393;\n  border: 2px solid #ea9393;\n  outline-color: black;\n  text-align: center;\n  &:hover {\n    color: white;\n    background: #ea9393;\n    transition: 0.5s ease-in-out;\n  }\n`;\n\nconst Instructions = () => {\n  return (\n    <Main>\n      <Title>\n        <Primary>Collaborative Piece</Primary>\n        <Secondary>Digital Media Design Final Year Project</Secondary>\n      </Title>\n      <Para>\n        <p>\n          Consectetur ex nulla voluptate dolore. Dolore dolor elit reprehenderit\n          mollit mollit id fugiat in consequat nisi incididunt labore. Nisi duis\n          ipsum exercitation eiusmod sit veniam anim eu consectetur eu nulla\n          laborum. Veniam ex adipisicing ipsum eu ea commodo commodo tempor\n          nostrud. Adipisicing ipsum anim tempor nulla ea in veniam qui in\n          occaecat.\n        </p>\n      </Para>\n      <Buttoncontainer>\n        <Button to=\"/three\">View Artwork</Button>\n        <Button to=\"/dashboard\">Make your mark</Button>\n      </Buttoncontainer>\n    </Main>\n  );\n};\n\nexport default Instructions;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Aist = styled(Link)`\n  color: white;\n  margin-right: 20px;\n  position: relative;\n  text-decoration-line: none;\n  transition: color 0.2s, transform 0.2s;\n  &:hover {\n    color: orange;\n    transform: translate(0px, -2px);\n    /* Translate doesn't seem to work at the moment, need to sort it */\n  }\n`;\n\nconst ListMain = styled.div`\n  position: absolute;\n  margin: 50px;\n  justify-content: center;\n  text-decoration-line: none;\n`;\n\nconst List = () => {\n  return (\n    <ListMain>\n      <Aist to=\"/\">instructions</Aist>\n      <Aist to=\"/dashboard\">controls</Aist>\n    </ListMain>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport Box from \"./three-components/Art\";\nimport Dashboard from \"./components/Dashboard\";\nimport Test from \"./components/test\";\nimport Instructions from \"./components/Instructions\";\nimport List from \"./static/List\";\nimport styled from \"styled-components\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nconst Mainapp = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  user-zoom: fixed;\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n`;\n\nfunction App() {\n  return (\n    <Mainapp>\n      <Switch>\n        <Route exact path=\"/\">\n          <Dashboard />\n          {/* <List /> */}\n        </Route>\n        <Route path=\"/three\">\n          <Box />\n        </Route>\n      </Switch>\n    </Mainapp>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import io from \"socket.io-client\";\nconst endpoint = process.env.REACT_APP_THREE_API_URL;\nexport const socket = io(endpoint);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { socket } from \"./socket/config\";\n\nexport const SocketContext = React.createContext();\n\nReactDOM.render(\n  <BrowserRouter>\n    <SocketContext.Provider value={socket}>\n      <App />\n    </SocketContext.Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}